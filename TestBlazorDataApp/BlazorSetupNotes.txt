0. Init DB
Command Prompt (elevated maybe)
	sqllocaldb create test

DB Init MSSQL Script
	create database TEST_Data
	create database TEST_Maintenance

	create table TEST_Data.dbo.Things
	(
		[Id] bigint IDENTITY PRIMARY KEY NOT NULL,
		[Text] nvarchar(max) NULL,
		[ThingStatus] int NOT NULL,
		[CreatedDateTime] datetime2(7) NOT NULL,
		[CreatedBy] nvarchar(max) NULL,
		[UpdatedDateTime] datetime2(7) NULL,
		[UpdatedBy] nvarchar(max) NULL,
	)

	insert into TEST_Data.dbo.Things ([Text], [ThingStatus], [CreatedDateTime], [CreatedBy])
	values ('Test', 0, GETDATE(), 'Seed')

	select * from TEST_Data.dbo.Things


1. Add Serilog Packages
Serilog
Serilog.AspNetCore
Serilog.Formatting.Compact
Serilog.Settings.Configuration
Serilog.Sinks.Console
Serilog.Sinks.File
Serilog.Sinks.MSSqlServer

[Latest Serilog.Sinks.MSSqlServer adds Azure.Identity version with vulnerability (1.7.0)]
Upgrate Azure.Identity transitive dependency to latest ver
Update .proj
	<PropertyGroup>
	  <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
	  <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
	</PropertyGroup>

2. Creat Serilog Configuration
Update appsettings.json > "Serilog" section

/Middleware
	SerilogConfigurator.cs

3. Update program.cs
	// Add Services
	builder.Services.AddScoped<TestService>();

	// Add DbContext Factory
	builder.Services.AddDbContextFactory<DataContext>(opt =>
    opt.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

	// Configure Options
	builder.Services.Configure<ApplicationOptions>(builder.Configuration.GetSection(nameof(ApplicationOptions)));
	
	// Add logging with Serilog
	builder.Host.UseSerilog((context, configuration) => 
		configuration.ConfigureLogging(context));
	[...]
	app.UseSerilogRequestLogging();

4. Configure Data Layer
Create "Data" Class Library project
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet tool install --global dotnet-ef
dotnet add package Microsoft.EntityFrameworkCore.Design
Install-Package Microsoft.EntityFrameworkCore.Tools
/Enums
/Models
	Thing.cs
DataContext.cs

5. Configure Service Layer
Create "Services" Class Library project
/Options
	ApplicationOptions.cs
SomeService.cs

6. Configure razor pages codebehind w/logging, service injection
/Components/Helpers
	PageBase.cs

Page.razor
	@inherits HomeBase
	@rendermode InteractiveServer

Page.razor.cs
	// do C# stuff

Page.razor.css
	// do css stuff